openapi: 3.0.3
info:
  title: Volunteer Management API
  version: 1.0.0
  description: |
    API for volunteer-management module in LDC Construction Tools.
    This module provides functionality for managing volunteers and their assignments.
  contact:
    name: LDC Construction Tools Team
    email: support@ldc-construction-tools.com

servers:
  - url: http://localhost:8000/api/v1
    description: Development server
  - url: https://staging.ldc-construction-tools.com/api/v1
    description: Staging server
  - url: https://ldc-construction-tools.com/api/v1
    description: Production server

paths:
  /volunteers:
    get:
      summary: List all volunteers
      description: Retrieve a paginated list of volunteers
      tags:
        - Volunteers
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: search
          in: query
          description: Search term for filtering
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Volunteer'
                  total:
                    type: integer
                    description: Total number of volunteers
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    post:
      summary: Create a new volunteer
      description: Create a new volunteer with the provided data
      tags:
        - Volunteers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVolunteerRequest'
      responses:
        '201':
          description: Volunteer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volunteer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /volunteers/{id}:
    get:
      summary: Get a specific volunteer
      description: Retrieve a specific volunteer by ID
      tags:
        - Volunteers
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier for the volunteer
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volunteer'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    put:
      summary: Update a volunteer
      description: Update an existing volunteer
      tags:
        - Volunteers
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier for the volunteer
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVolunteerRequest'
      responses:
        '200':
          description: Volunteer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volunteer'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      summary: Delete a volunteer
      description: Delete an existing volunteer
      tags:
        - Volunteers
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier for the volunteer
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Volunteer deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /volunteers/stats:
    get:
      summary: Get volunteer statistics
      description: Retrieve statistics about volunteers
      tags:
        - Volunteers
        - Statistics
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolunteerStats'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /volunteers/{id}/assignments:
    get:
      summary: Get volunteer assignments
      description: Retrieve all assignments for a specific volunteer
      tags:
        - Volunteers
        - Assignments
      parameters:
        - name: id
          in: path
          required: true
          description: Volunteer ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VolunteerAssignment'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /volunteers/health:
    get:
      summary: Health check
      description: Check the health status of the volunteer management module
      tags:
        - Health
      responses:
        '200':
          description: Module is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: "1.0.0"

components:
  schemas:
    Volunteer:
      type: object
      required:
        - id
        - name
        - email
        - congregation
        - status
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier
        name:
          type: string
          description: Full name of the volunteer
          maxLength: 255
        email:
          type: string
          format: email
          description: Email address
          maxLength: 255
        phone:
          type: string
          description: Phone number
          maxLength: 20
        congregation:
          type: string
          description: Congregation name
          maxLength: 255
        skills:
          type: array
          items:
            type: string
          description: List of skills/trades
        availability:
          type: string
          description: Availability schedule
          maxLength: 500
        status:
          type: string
          enum: [active, inactive, pending]
          description: Current status
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    CreateVolunteerRequest:
      type: object
      required:
        - name
        - email
        - congregation
      properties:
        name:
          type: string
          description: Full name of the volunteer
          maxLength: 255
        email:
          type: string
          format: email
          description: Email address
          maxLength: 255
        phone:
          type: string
          description: Phone number
          maxLength: 20
        congregation:
          type: string
          description: Congregation name
          maxLength: 255
        skills:
          type: array
          items:
            type: string
          description: List of skills/trades
        availability:
          type: string
          description: Availability schedule
          maxLength: 500

    UpdateVolunteerRequest:
      type: object
      properties:
        name:
          type: string
          description: Full name of the volunteer
          maxLength: 255
        email:
          type: string
          format: email
          description: Email address
          maxLength: 255
        phone:
          type: string
          description: Phone number
          maxLength: 20
        congregation:
          type: string
          description: Congregation name
          maxLength: 255
        skills:
          type: array
          items:
            type: string
          description: List of skills/trades
        availability:
          type: string
          description: Availability schedule
          maxLength: 500
        status:
          type: string
          enum: [active, inactive, pending]
          description: Current status

    VolunteerStats:
      type: object
      required:
        - total_volunteers
        - active_volunteers
        - pending_volunteers
        - inactive_volunteers
      properties:
        total_volunteers:
          type: integer
          description: Total number of volunteers
        active_volunteers:
          type: integer
          description: Number of active volunteers
        pending_volunteers:
          type: integer
          description: Number of pending volunteers
        inactive_volunteers:
          type: integer
          description: Number of inactive volunteers
        by_congregation:
          type: object
          additionalProperties:
            type: integer
          description: Volunteer count by congregation
        by_skills:
          type: object
          additionalProperties:
            type: integer
          description: Volunteer count by skills

    VolunteerAssignment:
      type: object
      required:
        - id
        - volunteer_id
        - project_id
        - trade_crew_id
        - role
        - start_date
        - status
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier
        volunteer_id:
          type: integer
          format: int64
          description: ID of the assigned volunteer
        project_id:
          type: integer
          format: int64
          description: ID of the project
        trade_crew_id:
          type: integer
          format: int64
          description: ID of the trade crew
        role:
          type: string
          description: Role/position in the assignment
          maxLength: 255
        start_date:
          type: string
          format: date
          description: Assignment start date
        end_date:
          type: string
          format: date
          description: Assignment end date
        status:
          type: string
          enum: [assigned, completed, cancelled]
          description: Assignment status

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Conflict:
      description: Resource conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Volunteers
    description: Operations related to volunteer management
  - name: Assignments
    description: Operations related to volunteer assignments
  - name: Statistics
    description: Statistical information about volunteers
  - name: Health
    description: Health check operations
